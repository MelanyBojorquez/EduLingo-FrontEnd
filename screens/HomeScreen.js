import React, { useState, useEffect } from 'react';
import { 
Â  Â  View, 
Â  Â  Text, 
Â  Â  StyleSheet, 
Â  Â  SafeAreaView, 
Â  Â  TextInput, 
Â  Â  TouchableOpacity, 
Â  Â  ScrollView, 
Â  Â  FlatList, 
Â  Â  ActivityIndicator 
} from 'react-native';
import Icon from 'react-native-vector-icons/Ionicons';
import { getUser, fetchLessons } from '../services/AuthService';

// --- Componente Reutilizable para el Carrusel de Cursos ---
// MODIFICADO: Ahora recibe 'navigation' para poder navegar.
const CourseCarousel = ({ title, data, navigation }) => (
Â  Â  <View style={styles.carouselContainer}>
Â  Â  Â  Â  <View style={styles.carouselHeader}>
Â  Â  Â  Â  Â  Â  <Text style={styles.carouselTitle}>{title}</Text>
Â  Â  Â  Â  Â  Â  <TouchableOpacity>
Â  Â  Â  Â  Â  Â  Â  Â  <Icon name="chevron-forward-outline" size={24} color="#5E35B1" />
Â  Â  Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  Â  </View>
Â  Â  Â  Â  <FlatList
Â  Â  Â  Â  Â  Â  data={data}
Â  Â  Â  Â  Â  Â  renderItem={({ item }) => (
                // MODIFICADO: Se aÃ±ade el evento onPress a la tarjeta.
Â  Â  Â  Â  Â  Â  Â  Â  <TouchableOpacity 
                    style={styles.courseCard}
                    // Al presionar, navega a 'ModuleDetail' y le pasa todo el objeto del mÃ³dulo.
                    onPress={() => navigation.navigate('ModuleDetail', { module: item })}
                >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.courseCardTitle}>{item.title}</Text>
Â  Â  Â  Â  Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  keyExtractor={item => item.id.toString()}
Â  Â  Â  Â  Â  Â  horizontal
Â  Â  Â  Â  Â  Â  showsHorizontalScrollIndicator={false}
Â  Â  Â  Â  Â  Â  contentContainerStyle={{ paddingLeft: 20 }}
Â  Â  Â  Â  />
Â  Â  </View>
);

// --- Pantalla Principal del Alumno ---
// MODIFICADO: Ahora recibe 'navigation' para pasÃ¡rselo a los carruseles.
const HomeScreen = ({ navigation }) => {
Â  Â  const [userName, setUserName] = useState('Usuario');
Â  Â  const [courseSections, setCourseSections] = useState([]);
Â  Â  const [isLoading, setIsLoading] = useState(true);
Â  Â  const [error, setError] = useState(null);

Â  Â  useEffect(() => {
Â  Â  Â  Â  const loadData = async () => {
Â  Â  Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  Â  Â  setIsLoading(true);
Â  Â  Â  Â  Â  Â  Â  Â  setError(null);
Â  Â  Â  Â  Â  Â  Â  Â  const user = await getUser();
Â  Â  Â  Â  Â  Â  Â  Â  if (user && user.name) setUserName(user.name);

Â  Â  Â  Â  Â  Â  Â  Â  const lessonsFromApi = await fetchLessons();
Â  Â  Â  Â  Â  Â  Â  Â  const grouped = lessonsFromApi.reduce((acc, lesson) => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  const category = lesson.category || 'General';
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  if (!acc[category]) {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  acc[category] = [];
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  acc[category].push(lesson);
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  return acc;
Â  Â  Â  Â  Â  Â  Â  Â  }, {});

Â  Â  Â  Â  Â  Â  Â  Â  const sectionsArray = Object.keys(grouped).map(key => ({
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  title: key,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  courses: grouped[key]
Â  Â  Â  Â  Â  Â  Â  Â  }));

Â  Â  Â  Â  Â  Â  Â  Â  setCourseSections(sectionsArray);
Â  Â  Â  Â  Â  Â  } catch (e) {
Â  Â  Â  Â  Â  Â  Â  Â  console.error("Error al cargar datos del HomeScreen:", e);
Â  Â  Â  Â  Â  Â  Â  Â  setError("No se pudieron cargar los cursos. Intenta de nuevo mÃ¡s tarde.");
Â  Â  Â  Â  Â  Â  } finally {
Â  Â  Â  Â  Â  Â  Â  Â  setIsLoading(false);
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  };
Â  Â  Â  Â  
Â  Â  Â  Â  loadData();
Â  Â  }, []);

Â  Â  return (
Â  Â  Â  Â  <SafeAreaView style={styles.container}>
Â  Â  Â  Â  Â  Â  <ScrollView showsVerticalScrollIndicator={false} contentContainerStyle={{ paddingBottom: 30 }}>
Â  Â  Â  Â  Â  Â  Â  Â  <View style={styles.headerContainer}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.greeting}>Hola, {userName} ðŸ‘‹</Text>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.headerSubtitle}>Â¿QuÃ© quieres aprender hoy?</Text>
Â  Â  Â  Â  Â  Â  Â  Â  </View>

Â  Â  Â  Â  Â  Â  Â  Â  <View style={styles.searchContainer}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Icon name="search-outline" size={22} color="#888" style={styles.searchIcon} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TextInput placeholder="Buscar" style={styles.searchInput} />
Â  Â  Â  Â  Â  Â  Â  Â  </View>

Â  Â  Â  Â  Â  Â  Â  Â  {isLoading ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ActivityIndicator size="large" color="#5E35B1" style={{ marginTop: 50 }} />
Â  Â  Â  Â  Â  Â  Â  Â  ) : error ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.errorText}>{error}</Text>
Â  Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  courseSections.map((section, index) => (
                        // MODIFICADO: Se pasa la propiedad 'navigation' al carrusel.
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <CourseCarousel 
                            key={index} 
                            title={section.title} 
                            data={section.courses}
                            navigation={navigation}
                        />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </ScrollView>
Â  Â  Â  Â  </SafeAreaView>
Â  Â  );
};

const styles = StyleSheet.create({
Â  Â  container: { flex: 1, backgroundColor: '#fff' },
Â  Â  greeting: { fontSize: 28, fontWeight: 'bold', color: '#333' },
Â  Â  headerContainer: { paddingHorizontal: 20, paddingTop: 20, paddingBottom: 10 },
Â  Â  headerSubtitle: { fontSize: 16, color: '#666', marginTop: 4 },
Â  Â  searchContainer: { flexDirection: 'row', alignItems: 'center', backgroundColor: '#f0f0f0', borderRadius: 15, marginHorizontal: 20, marginTop: 10, paddingHorizontal: 15 },
Â  Â  searchIcon: { marginRight: 10 },
Â  Â  searchInput: { flex: 1, height: 50, fontSize: 16 },
Â  Â  carouselContainer: { marginTop: 30 },
Â  Â  carouselHeader: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingHorizontal: 20, marginBottom: 15, backgroundColor: '#F3E5F5', paddingVertical: 12, borderRadius: 10, marginHorizontal: 20 },
Â  Â  carouselTitle: { fontSize: 20, fontWeight: 'bold', color: '#333' },
Â  Â  courseCard: { width: 140, height: 140, backgroundColor: '#e9e9e9', borderRadius: 15, marginRight: 15, justifyContent: 'center', alignItems: 'center', padding: 10 },
Â  Â  courseCardTitle: { fontWeight: 'bold', textAlign: 'center' },
Â  Â  errorText: { textAlign: 'center', marginTop: 50, color: 'red', fontSize: 16, paddingHorizontal: 20 },
});

export default HomeScreen;
